{"ast":null,"code":"var _jsxFileName = \"/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/pages/shoppage/shopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux;';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { updateCo } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/pages/shoppage/shopPage.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCo","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,QAAT,QAAyB,+BAAzB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAChCC,uBADgC,GACN,IADM;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAG;AACb,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACpC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACN,KAHD;AAIN;;AACDG,EAAAA,MAAM,GAAG;AAAA,UACMC,KADN,GACgB,KAAKC,KADrB,CACMD,KADN;AAEF,WACO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,EAEO,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKiB,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFP,CADP;AAMN;;AAjB+B;;AAoBvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACjCC,EAAAA,iBAAiB,EAAET,cAAc,IAAIQ,QAAQ,CAACC,iBAAiB,CAACT,cAAD,CAAlB;AADZ,CAAL,CAAnC;;AAIA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux;'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview'\nimport CollectionPage from '../collection/collection';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { updateCo } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n       unsubscribeFromSnapshot = null;\n       componentDidMount() {\n              const collectionRef = firestore.collection('collections');\n              collectionRef.onSnapshot(async snapshot => {\n                     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                     console.log(collectionsMap);\n              })\n       }\n       render() {\n              const { match } = this.props;\n              return (\n                     <div className='shop-page'>\n                            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n                     </div>\n              )\n       }\n}\n\nconst mapDispatchToProps = dispatch => ({\n       updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}