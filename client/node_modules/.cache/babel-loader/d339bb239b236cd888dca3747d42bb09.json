{"ast":null,"code":"var _jsxFileName = \"/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/pages/shoppage/shopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collection-overview.container';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionOverviewContainer from '../../components/collections-overview/collection-overview.container';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: React.createElement(CollectionOverviewContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/pages/shoppage/shopPage.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionLoaded","CollectionOverviewContainer","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,qEAAzC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAA0C,iCAA1C;AACA,OAAOC,2BAAP,MAAwC,qEAAxC;AAEA,MAAMC,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;AAGA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACDC,MAAAA,OAAO,EAAE;AADR,KADwB;AAAA,SAIhCC,uBAJgC,GAIN,IAJM;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAAA,UACLT,0BADK,GAC0B,KAAKU,KAD/B,CACLV,0BADK;AAEbA,IAAAA,0BAA0B;AAEhC;;AACDW,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKD,KAD1C;AAAA,UACME,KADN,eACMA,KADN;AAAA,UACaC,kBADb,eACaA,kBADb;AAEF,WACO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,oBAAC,KAAD;AACO,MAAA,KAAK,MADZ;AAEO,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFX;AAGO,MAAA,SAAS,EAAG,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,EAOO,oBAAC,KAAD;AACO,MAAA,IAAI,YAAKF,KAAK,CAACE,IAAX,mBADX;AAEO,MAAA,MAAM,EAAEJ,KAAK,IAAI,oBAAC,yBAAD;AACV,QAAA,SAAS,EAAE,CAACG;AADF,SAENH,KAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPP,CADP;AAiBN;;AA7B+B;;AAgCvC,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC1CiB,EAAAA,kBAAkB,EAAEZ;AADsB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACjCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADT,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collection-overview.container';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionLoaded  } from '../../redux/shop/shop.selectors';\nimport CollectionOverviewContainer from '../../components/collections-overview/collection-overview.container';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n       state = {\n              loading: true,\n       }\n       unsubscribeFromSnapshot = null;\n       componentDidMount() {\n              const { fetchCollectionsStartAsync } = this.props;\n              fetchCollectionsStartAsync();\n\n       }\n       render() {\n              const { match, isCollectionLoaded  } = this.props;\n              return (\n                     <div className='shop-page'>\n                            <Route\n                                   exact\n                                   path={`${match.path}`}\n                                   component={ <CollectionOverviewContainer\n                                   />}\n                            />\n                            <Route\n                                   path={`${match.path}/:collectionId`}\n                                   render={props => <CollectionPageWithSpinner\n                                          isLoading={!isCollectionLoaded}\n                                          {...props}\n                                   />}\n                            />\n                     </div>\n              )\n       }\n}\n\nconst mapStateToProps = createStructuredSelector({\n       isCollectionLoaded: selectIsCollectionLoaded,\n})\n\nconst mapDispatchToProps = dispatch => ({\n       fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}