{"ast":null,"code":"var _jsxFileName = \"/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport classes from './cart-dropdown.module.scss';\nimport CustomButton from '../custom-button/custom-button';\nimport CartItem from '../cart-item/cart-item';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: classes.cartDropdown,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: classes.cartItems,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: classes.emptyMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your card is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","connect","createStructuredSelector","withRouter","classes","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","cartDropdown","length","map","cartItem","id","emptyMessage","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,OAAP,MAAmB,6BAAnB;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAER,OAAO,CAACS,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAET,OAAO,CAACM,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIA,SAAS,CAACI,MAAV,GACAJ,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,GAIA;AAAM,EAAA,SAAS,EAAEZ,OAAO,CAACc,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADJ,EAWI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AACzBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACAP,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACC,GAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ;;AAoBA,MAAMY,eAAe,GAAGlB,wBAAwB,CAAE;AAC9CQ,EAAAA,SAAS,EAAEH;AADmC,CAAF,CAAhD;AAKA,eAAeJ,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBX,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from'./cart-dropdown.module.scss';\n\nimport CustomButton from '../custom-button/custom-button';\nimport CartItem from '../cart-item/cart-item';\n\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n    <div className={classes.cartDropdown}>\n        <div className={classes.cartItems}>\n        {\n            cartItems.length ? \n            cartItems.map(cartItem => (\n                <CartItem key={cartItem.id} item={cartItem} />\n            )) : (\n            <span className={classes.emptyMessage}>Your card is empty</span>\n            )\n        }\n        </div>\n        <CustomButton onClick={() => {\n            history.push('/checkout');\n            dispatch(toggleCartHidden());\n            }\n        }>GO TO CHECKOUT</CustomButton>\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector ({\n    cartItems: selectCartItems,\n});\n\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}