{"ast":null,"code":"import _slicedToArray from \"/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/components/sign-in/sign-in.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.scss';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.util';\n\nconst SignIn = props => {\n  // state = {\n  //     email: '',\n  //     password: '',\n  // }\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setEmail('');\n      this.setState({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"email\",\n    value: email,\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"password\",\n    value: password,\n    required: true,\n    handleChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, ' ', \"Sign in with google\", ' '))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/hovhannes/Desktop/udemy/Complete React Developer in 2019/crwn-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignIn","props","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,8BAAvC;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB;AACA;AACA;AACA;AAJoB,oBAMMN,QAAQ,CAAC,EAAD,CANd;AAAA;AAAA,QAMbO,KANa;AAAA,QAMNC,QANM;;AAAA,qBAOYR,QAAQ,CAAC,EAAD,CAPpB;AAAA;AAAA,QAObS,QAPa;AAAA,QAOHC,WAPG;;AASpB,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AADgC,wBAEJ,KAAKC,KAFD;AAAA,UAExBP,KAFwB,eAExBA,KAFwB;AAAA,UAEjBE,QAFiB,eAEjBA,QAFiB;;AAGhC,QAAI;AACA,YAAMN,IAAI,CAACY,0BAAL,CAAgCR,KAAhC,EAAuCE,QAAvC,CAAN;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAEA,WAAKQ,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,EAAT;AAAaE,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AACH,KALD,CAKE,OAAOQ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAZD;;AAcA,QAAMG,YAAY,GAAGR,KAAK,IAAI;AAAA,0BACFA,KAAK,CAACS,MADJ;AAAA,UAClBC,KADkB,iBAClBA,KADkB;AAAA,UACXC,IADW,iBACXA,IADW;AAE1B,SAAKP,QAAL,CAAc;AAAE,OAACO,IAAD,GAAQD;AAAV,KAAd;AACH,GAHD;;AAII,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAGI;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,KAAK,EAAEJ,KAJX;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,YAAY,EAAEa,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,KAAK,EAAEX,QAJX;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,YAAY,EAAE,KAAKW,YANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEhB,gBAArC;AAAuD,IAAA,cAAc,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,GADL,yBAEwB,GAFxB,CAFJ,CAjBJ,CAHJ,CADJ;AAiCP,CA5DD;;AA8DA,eAAeC,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './sign-in.scss';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.util';\n\nconst SignIn = props => {\n    // state = {\n    //     email: '',\n    //     password: '',\n    // }\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            setEmail('');\n            \n            this.setState({ email: '', password: '' });\n        } catch (error) {\n            console.log(error);\n        }\n        \n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({ [name]: value });\n    }\n        return(\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type='email'\n                        label='email'\n                        value={email}\n                        required\n                        handleChange={handleChange}\n                    />\n                    <FormInput\n                        name='password'\n                        type='password'\n                        label='password'\n                        value={password}\n                        required\n                        handleChange={this.handleChange}\n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign in </CustomButton>\n                        <CustomButton type='button' onClick={signInWithGoogle} isGoogleSignIn>\n                            {' '}\n                            Sign in with google{' '}\n                        </CustomButton>\n                    </div>\n                    \n                </form>\n\n            </div>\n        )\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}